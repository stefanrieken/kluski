# Variable number of args is supported for '+'
printnum (+ 1 2 3 4);

# And for '*'
printnum (* 2 3 4);

# This is half of 42:
printnum (eval { * (+ 1 2) (+ 3 4) });

# And this is all of it:
eval { printnum (+ (* 3 4) (* 5 6)) };

# This prints a pointer:
printnum "42";

# This prints text:
print "Hello, world!\n";

# Maths operations are in-lined where possible,
# and first-class funtions where applicable
printnum (funcall + 1 2);
printnum (funcall eval { + 3 4 });
printnum (% 13 4);
printnum (funcall % 13 4);

# Nested blocks
printnum (eval { eval { + 1 2 } });

# Define
define "x" 42;
set "x" 33;
printnum (get "x");
printnum x;

define "foo" { print "Hello from a function!\n"; };
eval foo;
foo (+ 1 2);
